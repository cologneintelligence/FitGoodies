<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: build.xml 192 2009-08-20 14:41:05Z jwierum $ -->

<project name="FitGoodies" basedir="." default="all">
	<property name="src.dir" location="src"/>
	<property name="test.dir" location="tests"/>
	<property name="build.dir" location="build"/>
	<property name="build.test.dir" location="build-tests"/>
	<property name="report.dir" location="report"/>
	<property name="dist.dir" location="dist"/>
	<property name="doc.dir" location="doc"/>
	<property name="doccheck.dir" location="doccheck"/>
	<property name="demo.dir" location="demo"/>
	<property name="demo.out.dir" location="demo-output"/>
	<property name="lib.dir" location="lib"/>
	<property name="tmp.dir" location="package.tmp"/>
	
	<path id="base.classpath">
		<pathelement path="${lib.dir}/fit.jar"/>
		<pathelement path="${lib.dir}/log4j-1.2.15.jar"/>
	</path>

	<path id="build.classpath">
		<path refid="base.classpath"/>
		<pathelement path="${lib.dir}/bcel-5.2.jar"/>
		<pathelement path="${lib.dir}/mailapi.jar"/>
	</path>
	
	<path id="test.classpath">
		<path refid="build.classpath" />
		<pathelement path="${lib.dir}/junit-3.8.2.jar"/>
		<pathelement path="${lib.dir}/jmock-2.5.1.jar"/>
		<pathelement path="${lib.dir}/jmock-junit3-2.5.1.jar"/>
		<pathelement path="${lib.dir}/hamcrest-core-1.1.jar"/>
		<pathelement path="${lib.dir}/hamcrest-library-1.1.jar"/>
		<pathelement path="${lib.dir}/cglib-nodep-2.2.jar"/>
		<pathelement path="${lib.dir}/jmock-legacy-2.5.1.jar"/>
		<pathelement path="${lib.dir}/objenesis-1.0.jar"/>
		<pathelement path="${build.dir}"/>
		<pathelement path="${build.test.dir}"/>
	</path>
	
	<path id="demo.classpath">
		<path refid="base.classpath" />
		<pathelement path="${lib.dir}/derby.jar"/>
		<pathelement path="${dist.dir}/fitgoodies.jar"/>
		<pathelement path="${demo.out.dir}"/>
	</path>
	
	<target name="prepare">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.test.dir}"/>
		<mkdir dir="${report.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${doc.dir}"/>
		<mkdir dir="${doccheck.dir}"/>
	</target>
	
	<target name="clean" description="deletes the output directories">
		<delete dir="${build.dir}"/>
		<delete dir="${build.test.dir}"/>
		<delete dir="${report.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${demo.out.dir}"/>
		<delete dir="${doc.dir}"/>
		<delete dir="${doccheck.dir}"/>
	</target>
	
	<target name="build" depends="prepare" description="compiles all java files">
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" debug="true"/>
		<javac srcdir="${test.dir}" destdir="${build.test.dir}" classpathref="test.classpath" debug="true" encoding="iso-8859-1"/>
	</target>
	
	<target name="test" depends="build" description="runs all unit tests">
		<junit errorproperty="junitfailure" failureproperty="junitfailure">
			<classpath refid="test.classpath" />
			
			<formatter type="brief" usefile="no"/>
			<formatter type="xml"/>
			<batchtest todir="${report.dir}">
				<fileset dir="${build.test.dir}" includes="**/*Test.class"/>
			</batchtest>
		</junit>
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}" includes="TEST-*.xml"/>
			<report todir="${report.dir}" format="noframes"/>
		</junitreport>
		
		<fail if="junitfailure"/>
	</target>
	
	<target name="package" depends="build" description="package compiled files">
		<uptodate property="package.uptodate" targetfile="${dist.dir}/fitgoodies.jar">
			<srcfiles dir="${build.dir}" includes="**/*.class"/>
			<srcfiles dir="${basedir}" includes="*.txt"/>
		</uptodate>
		<antcall target="package-force" />
	</target>
	
	<target name="package-force" unless="package.uptodate">
		<copy todir="${tmp.dir}">
			<fileset dir="${build.dir}"/>
		</copy>
		<unjar dest="${tmp.dir}" src="${lib.dir}/bcel-5.2.jar"/>
		<jar destfile="${dist.dir}/fitgoodies.jar" basedir="${tmp.dir}"/>
		<copy todir="${dist.dir}">
			<fileset dir="${basedir}" includes="*.txt"/>
		</copy>
		<delete dir="${tmp.dir}"/>
	</target>
	
	<target name="demo" depends="package" description="runs the demo">
		<delete dir="${demo.out.dir}"/>
		<mkdir dir="${demo.out.dir}"/>
		<javac srcdir="${demo.dir}" destdir="${demo.out.dir}"
			classpathref="demo.classpath" />
		<copy tofile="${demo.out.dir}/style.css" file="${demo.dir}/style.css"/>
		<java classname="fitgoodies.runners.DirectoryRunner">
			<classpath refid="demo.classpath" />
			<arg value="${demo.dir}"/>
			<arg value="${demo.out.dir}"/>
			<arg value="utf-8"/>
		</java>
	</target>
	
	<target name="doc" depends="prepare" description="builds the documentation">
		<javadoc destdir="${doc.dir}" sourcepath="${src.dir}"
			classpathref="build.classpath"/> 
	</target>

	<target name="doccheck" depends="prepare" description="checks the documentation">
		<javadoc destdir="${doccheck.dir}" sourcepath="${src.dir}"
			docletpath="${lib.dir}/doccheck.jar"
			doclet="com.sun.tools.doclets.doccheck.DocCheck"
			classpathref="build.classpath"/>
	</target>
	
	<target name="alldocs" depends="doccheck, doc" 
		description="checks and builds the codumentation" />
	
	<target name="all" depends="clean, test, package, alldocs, demo" 
		description="cleans up, compiles, tests and packages all classes"/>
</project>